function SwiftClick(a){if(typeof SwiftClick.swiftDictionary[a]!=="undefined")return SwiftClick.swiftDictionary[a];SwiftClick.swiftDictionary[a]=this;this.options={elements:{a:"a",div:"div",span:"span",button:"button"},maxTouchDrift:30};var b=this,c=a,d=c.onclick,e=false,f={x:0,y:0},g={x:0,y:0},h=true,i=false;if("onorientationchange"in window&&"ontouchstart"in window){j()}function j(){if(typeof d==="function"){c.addEventListener("click",k,false);c.onclick=null}c.addEventListener("touchstart",l,false);c.addEventListener("click",n,true)}function k(a){d(a)}function l(a){var c=a.target,d=c.nodeName.toLowerCase(),i=a.changedTouches[0];f.x=i.pageX;f.y=i.pageY;g=p();if(typeof b.options.elements[d]==="undefined"){return true}if(e){h=false;return true}a.stopPropagation();e=true;c.removeEventListener("touchend",m,false);c.addEventListener("touchend",m,false)}function m(a){var c=a.target,d,j=true;c.removeEventListener("touchend",m,false);d=a.changedTouches[0];if(!h||Math.abs(d.pageX-f.x)>b.options.maxTouchDrift||Math.abs(d.pageY-f.y)>b.options.maxTouchDrift||Math.abs(p().x-g.x)>b.options.maxTouchDrift||Math.abs(p().y-g.y)>b.options.maxTouchDrift){if(e){a.stopPropagation();a.preventDefault();j=false}e=false;h=true;return j}a.stopPropagation();a.preventDefault();i=false;c.focus();o(c,d);e=false;h=true;return false}function n(a){var c=a.target,d=c.nodeName.toLowerCase();if(typeof b.options.elements[d]!=="undefined"){if(i){i=false;a.stopPropagation();a.preventDefault();return false}i=true}}function o(a,b){var c=document.createEvent("MouseEvents");c.initMouseEvent("click",true,true,window,1,b.screenX,b.screenY,b.clientX,b.clientY,false,false,false,false,0,null);a.dispatchEvent(c)}function p(){var a={x:window.pageXOffset||document.body.scrollLeft||document.documentElement.scrollLeft||0,y:window.pageYOffset||document.body.scrollTop||document.documentElement.scrollTop||0};return a}b.addNodeNamesToTrack=function(a){var c=0,d=a.length,e;for(c;c<d;c++){if(typeof a[c]!=="string")throw new TypeError("all values within the 'nodeNames' array must be of type 'string'");e=a[c].toLowerCase();b.options.elements[e]=e}};b.replaceNodeNamesToTrack=function(a){b.options.elements={};b.addNodeNamesToTrack(a)}}SwiftClick.swiftDictionary={};SwiftClick.attach=function(a){"use strict";if(typeof SwiftClick.swiftDictionary[a]!=="undefined")return SwiftClick.swiftDictionary[a];return new SwiftClick(a)};if(typeof define!=="undefined"&&define.amd){define(function(){"use strict";return SwiftClick})}else if(typeof module!=="undefined"&&module.exports){module.exports=SwiftClick}else{window.SwiftClick=SwiftClick}var trak=function(){"use strict";var a=function(a){if(!a){return""}if(!trak.options.clean){return d.call(this,a)}else{return d.call(this,a).toString().replace(/\s|'|"/g,f.delimeter).toLowerCase()}};var b=function(b){var c=e(b);var d=a.call(this,c.category);var g=a.call(this,c.action);var h=a.call(this,c.label);var i=c.eventName;var j=c.value;var k=c.nonInteraction;if(f.trackType==="ga"&&typeof ga!=="undefined"){ga("send","event",d,g,h,j,{nonInteraction:k})}else if(f.trackType==="_gaq"&&typeof _gaq!=="undefined"){_gaq.push(["_trackEvent",d,g,h,j])}else if(f.trackType==="gtm"&&typeof dataLayer!=="undefined"){dataLayer.push({event:i,eventCategory:d,eventAction:g,eventLabel:h,eventValue:j})}if(f.additionalTypes!==undefined){f.additionalTypes()}if(f.debug){console.debug("Debug message:\n Category:",d,"\n Action:",g,"\n Label:",h)}};var c=function(){var a=this.getAttribute("data-trakwithjs")!==null?true:false;if(!a){var c=JSON.parse(this.getAttribute("data-trak"));b.call(this,c)}};var d=function(a){var b;switch(a){case"page.title":b=document.title;break;case"page.href":b=window.location.href;break;case"link.href":b=this.href;break;case"link.title":b=this.title;break;case"referrer":b=document.referrer?document.referrer:"No referrer";break;default:b=a;break}return b};var e=function(a){return{category:a&&a.category||"",action:a&&a.action||"",label:a&&a.label||"",value:a&&a.value||0,nonInteraction:a&&a.nonInteraction||false,eventName:a&&a.eventName||undefined}};var f={clean:true,delimeter:"_",trackType:"ga",additionalTypes:undefined,debug:false};var g=function(){var a=document.querySelectorAll("[data-trak]");for(var b=0;b<a.length;b++){var d=JSON.parse(a[b].getAttribute("data-trak"));var e=d.trigger||"click";if(a[b].addEventListener){a[b].addEventListener(e,c)}else if(a[b].attachEvent){a[b].attachEvent("on"+e,c)}}};return{start:g,clean:a,event:b,attrEvent:c,wildcard:d,options:f}}();if(typeof define!=="undefined"&&define.amd){define(function(){"use strict";return trak})}else if(typeof module!=="undefined"&&module.exports){module.exports=trak}else{window.trak=trak}(function(){document.addEventListener("DOMContentLoaded",function(){trak.start();var a=SwiftClick.attach(document.body);var b=document.querySelector(".navBtn");b.addEventListener("click",function(a){a.preventDefault();if(document.body.classList.contains("is-nav-active")){document.body.classList.remove("is-nav-active")}else{document.body.classList.add("is-nav-active");trak.event("Navigation","Click","Open nav")}})})})();